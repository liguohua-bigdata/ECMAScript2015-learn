{"version":3,"sources":["数值和布尔值的解构赋值004.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AAAA,UACwB,GADxB;AAAA,MACmB,CADnB,KACS,QADT;;AAEI,MAAI,IAAG,MAAM,OAAO,SAAP,CAAiB,QAA9B,CAFJ,CAE6C;AACzC,UAAQ,IAAR,CAAa,CAAb;;AAHJ,cAKyB,IALzB;AAAA,MAKmB,EALnB,SAKS,QALT;;AAMI,MAAI,KAAG,OAAO,QAAQ,SAAR,CAAkB,QAAhC,CANJ,CAM6C;AACzC,UAAQ,IAAR,CAAa,EAAb;AACA;AAEH;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AACI;AACA;AACH","file":"数值和布尔值的解构赋值004-compiled.js","sourcesContent":["/**\n * Created by liguohua on 16/10/10.\n */\n/**\n *解构赋值的规则是，只要等号右边的值不是对象，就先将其转为对象。\n */\nconsole.log(\"**************001\");\n{\n    let {toString: s} = 123;\n    let r=(s === Number.prototype.toString );// true\n    console.info(r);\n\n    let {toString: s0} = true;\n    let rs=s0 === Boolean.prototype.toString // true\n    console.info(rs);\n    //数值和布尔值的包装对象都有toString属性，因此变量s都能取到值。\n\n}\n/**\n *由于undefined和null无法转为对象，所以对它们进行解构赋值，都会报错。\n */\nconsole.log(\"**************002\");\n{\n    // let { prop: x } = undefined; // TypeError\n    // let { prop: y } = null; // TypeError\n}\n"]}