{"version":3,"sources":["对象的解构赋值002.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AAAA,iBACqB,EAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,EADrB;AAAA,MACS,GADT,YACS,GADT;AAAA,MACc,GADd,YACc,GADd;;AAEI,UAAQ,GAAR,CAAY,GAAZ;AACA,UAAQ,GAAR,CAAY,GAAZ;AACH;;AAGD;;;;AAIA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AAAA,kBACgB,EAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,EADhB;AAAA,MACS,GADT,aACS,GADT;;AAEI,UAAQ,IAAR,CAAa,GAAb;AACH;;AAGD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AAAA,kBACqB,EAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,EADrB;AAAA,MACc,GADd,aACS,GADT;;AAEI,UAAQ,IAAR,CAAa,GAAb,EAFJ,CAEuB;AACtB;;AAGD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AAAA,kBAC+B,EAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,EAD/B;AAAA,MACc,GADd,aACS,GADT;AAAA,MACwB,GADxB,aACmB,GADnB;;AAEI,UAAQ,IAAR,CAAa,GAAb,EAFJ,CAEuB;AAEtB;AACD;;;;AAIA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AAAA,kBACqB,EAAC,KAAK,KAAN,EAAa,KAAK,KAAlB,EADrB;AAAA,MACc,GADd,aACS,GADT;;AAEI,UAAQ,IAAR,CAAa,GAAb,EAFJ,CAEuB;AACnB,UAAQ,IAAR,CAAa,GAAb,EAHJ,CAGuB;AACtB;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC","file":"对象的解构赋值002-compiled.js","sourcesContent":["/**\n * Created by liguohua on 16/10/10.\n */\n/**\n * 解构不仅可以用于数组，还可以用于对象。\n */\nconsole.log(\"**************001\");\n{\n    var {foo, bar} = {foo: \"aaa\", bar: \"bbb\"};\n    console.log(foo);\n    console.log(bar);\n}\n\n\n/**\n *数组的元素是按次序排列的，变量的取值由它的位置决定；\n * 而对象的属性没有次序，变量必须与属性同名，才能取到正确的值\n */\nconsole.log(\"**************002\");\n{\n    var {baz} = {foo: \"aaa\", bar: \"bbb\"};\n    console.info(baz);\n}\n\n\n/**\n 如果变量名与属性名不一致，必须写成下面这样\n */\nconsole.log(\"**************003\");\n{\n    var {foo: baz} = {foo: 'aaa', bar: 'bbb'};\n    console.info(baz); // \"aaa\"\n}\n\n\n/**\n *对象的解构赋值是下面形式的简写\n */\nconsole.log(\"**************004\");\n{\n    var {foo: foo, bar: bar} = {foo: \"aaa\", bar: \"bbb\"};\n    console.info(foo); // \"aaa\"\n\n}\n/**\n *对象的解构赋值的内部机制，是先找到同名属性，然后再赋给对应的变量。真正被赋值的是后者，而不是前者。\n * 实验中两者都可以赋值成功!\n */\nconsole.log(\"**************005\");\n{\n    var {foo: baz} = {foo: \"aaa\", bar: \"bbb\"};\n    console.info(baz); // \"aaa\"\n    console.info(foo); // \"aaa\"\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n"]}