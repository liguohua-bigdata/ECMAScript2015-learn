{"version":3,"sources":["用途007.js"],"names":[],"mappings":"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","file":"用途007-compiled.js","sourcesContent":["/**\n * Created by liguohua on 16/10/10.\n */\n\n/**\n *（1）交换变量的值\n * [x, y] = [y, x];\n */\nconsole.log(\"**************001\");\n{\n    function swap([x,y]) {\n        return [y,x];\n    }\n    let obj = ['zhangsan', 18]\n    console.info(obj);\n\n    let obj2=swap(obj);\n    console.info(obj2);\n\n}\n/**\n *（2）从函数返回多个值\n *\n */\nconsole.log(\"**************002\");\n{\n    //用数组返回多个值\n    function example() {\n        return [1, 2, 3];\n    }\n    var [a, b, c] = example();\n    console.info(a);\n    console.info(b);\n    console.info(c);\n\n    // 用对象返回多个值\n    function example2() {\n        return {\n            foo: '张三',\n            bar: '李四'\n        };\n    }\n    var { foo, bar } = example2();\n    console.info(foo);\n    console.info(bar);\n}\n/**\n *（3）函数参数的定义\n */\nconsole.log(\"**************003\");\n{\n    // 参数是一组有次序的值\n    function f([x, y, z]) {\n        console.info(x);\n        console.info(y);\n        console.info(z);\n\n    }\n    f([1, 2, 3]);\n\n    // 参数是一组无次序的值\n    function f2({x0, y0, z0}) {\n        console.info(x0);\n        console.info(y0);\n        console.info(z0);\n    }\n    f2({z0: 'zhangsan', y0: 'lisi', x0: 'wangwu'});\n}\n/**\n *（4）提取JSON数据\n */\nconsole.log(\"**************004\");\n{\n    var jsonData = {\n        id: 42,\n        status: \"OK\",\n        data: [867, 5309]\n    };\n\n    let { id, status, data: number } = jsonData;\n\n    console.log(id, status, number);// 42, \"OK\", [867, 5309]\n}\n/**\n *（5）函数参数的默认值\n */\nconsole.log(\"**************005\");\n{\n   /* jQuery.ajax = function (url, {\n        async = true,\n        beforeSend = function () {},\n        cache = true,\n        complete = function () {},\n        crossDomain = false,\n        global = true,\n        // ... more config\n    }) {\n        // ... do stuff\n    };*/\n   // 指定参数的默认值，就避免了在函数体内部再写var foo = config.foo || 'default foo';这样的语句。\n}\n/**\n *（6）遍历Map结构\n */\nconsole.log(\"**************006\");\n{\n    var map = new Map();\n    map.set('first', 'hello');\n    map.set('second', 'world');\n\n    for (let [key, value] of map) {\n        console.log(key + \" is \" + value);\n    }\n    // first is hello\n    // second is world\n\n\n    // 获取键名\n    for (let [key] of map) {\n        console.log('key='+key );\n    }\n    // key=first\n    // key=second\n\n    // 获取键值\n    for (let [,value] of map) {\n        console.log('value='+value );\n    }\n    // value=hello\n    // value=world\n\n}\n/**\n *（7）输入模块的指定方法\n * 加载模块时，往往需要指定输入那些方法。解构赋值使得输入语句非常清晰。\n */\nconsole.log(\"**************007\");\n{\n    const { SourceMapConsumer, SourceNode } = require(\"source-map\");\n\n}\n"]}