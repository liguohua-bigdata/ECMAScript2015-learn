{"version":3,"sources":["Array.of().002.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;;AAIA;AACI,UAAM,EAAN,CAAS,CAAT,EAAY,EAAZ,EAAgB,CAAhB,EADJ,CACuB;AACnB,UAAM,EAAN,CAAS,CAAT,EAFJ,CAEgB;AACZ,UAAM,EAAN,CAAS,CAAT,EAAY,MAAZ,CAHJ,CAGuB;AACtB;AACD;;;AAGA;AACI,YADJ,CACY;;AAER;AACA,UAAM,CAAN,EAJJ,CAIa;;AAET;AACA,UAAM,CAAN,EAAS,EAAT,EAAa,CAAb,EAPJ,CAOoB;AACnB;AACD;;;;AAIA;AACI,UAAM,EAAN,GADJ,CACe;AACX,UAAM,EAAN,CAAS,SAAT,EAFJ,CAEwB;AACpB,UAAM,EAAN,CAAS,CAAT,EAHJ,CAGgB;AACZ,UAAM,EAAN,CAAS,CAAT,EAAY,CAAZ,EAJJ,CAImB;AAClB;AACD;;;AAGA;AAAA,QACa,OADb,GACI,SAAS,OAAT,GAAkB;AACd,eAAO,GAAG,KAAH,CAAS,IAAT,CAAc,SAAd,CAAP;AACH,KAHL;AAIC","file":"Array.of().002-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/11.\n */\n/**\n *Array.of()\n Array.of方法用于将一组值，转换为数组。\n */\n{\n    Array.of(3, 11, 8) // [3,11,8]\n    Array.of(3) // [3]\n    Array.of(3).length // 1\n}\n/**\n *这个方法的主要目的，是弥补数组构造函数Array()的不足。因为参数个数的不同，会导致Array()的行为有差异。\n */\n{\n    Array() // []\n\n    //参数个数只有一个时，实际上是指定数组的长度\n    Array(3) // [, , ,]\n\n    //只有当参数个数不少于2个时，Array()才会返回由参数组成的新数组\n    Array(3, 11, 8) // [3, 11, 8]\n}\n/**\n *Arrayrray.of基本上可以用来替代Array()或new Array()，并且不存在由于参数不同而导致的重载。它的行为非常统一。\n * Array.of总是返回参数值组成的数组。如果没有参数，就返回一个空数组\n */\n{\n    Array.of() // []\n    Array.of(undefined) // [undefined]\n    Array.of(1) // [1]\n    Array.of(1, 2) // [1, 2]\n}\n/**\n *Array.of方法可以用下面的代码模拟实现。\n */\n{\n    function ArrayOf(){\n        return [].slice.call(arguments);\n    }\n}\n"]}