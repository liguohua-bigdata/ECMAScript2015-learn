{"version":3,"sources":["数组实例的includes().007.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;AAGA;AACI,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,QAAV,CAAmB,CAAnB,EADJ,CAC+B;AAC3B,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,QAAV,CAAmB,CAAnB,EAFJ,CAE+B;AAC3B,GAAC,CAAD,EAAI,CAAJ,EAAO,GAAP,EAAY,QAAZ,CAAqB,GAArB,EAHJ,CAG+B;AAC9B;AACD;;;;;;AAMA;AACI,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,QAAV,CAAmB,CAAnB,EAAsB,CAAtB,EADJ,CAC+B;AAC3B,GAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,QAAV,CAAmB,CAAnB,EAAsB,CAAC,CAAvB,EAFJ,CAE+B;AAC9B;AACD;;;;;;;AAOA","file":"数组实例的includes().007-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/12.\n */\n/**\n *Array.prototype.includes方法返回一个布尔值，表示某个数组是否包含给定的值，与字符串的includes方法类似。\n */\n{\n    [1, 2, 3].includes(2);     // true\n    [1, 2, 3].includes(4);     // false\n    [1, 2, NaN].includes(NaN); // true\n}\n/**\n *该方法的第二个参数表示搜索的起始位置，\n * 1.默认为0。\n * 2.如果第二个参数为负数，则表示倒数的位置，\n * 3.如果这时它大于数组长度（比如第二个参数为-4，但数组长度为3），则会重置为从0开始。\n */\n{\n    [1, 2, 3].includes(3, 3);  // false\n    [1, 2, 3].includes(3, -1); // true\n}\n/**\n *没有该方法之前，我们通常使用数组的indexOf方法，检查是否包含某个值。\n * indexOf方法有两个缺点，\n * 一是不够语义化，它的含义是找到参数值的第一个出现位置，所以要去比较是否不等于-1，表达起来不够直观。\n * 二是，它内部使用严格相当运算符（===）进行判断，这会导致对NaN的误判。\n */\n\n/**\n *Map和Set数据结构有一个has方法，需要注意与includes区分。\n Map结构的has方法，是用来查找键名的，比如Map.prototype.has(key)、WeakMap.prototype.has(key)、Reflect.has(target, propertyKey)。\n Set结构的has方法，是用来查找值的，比如Set.prototype.has(value)、WeakSet.prototype.has(value)。\n */\n"]}