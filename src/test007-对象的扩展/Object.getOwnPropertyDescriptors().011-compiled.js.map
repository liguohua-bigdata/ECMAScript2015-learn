{"version":3,"sources":["Object.getOwnPropertyDescriptors().011.js"],"names":[],"mappings":";;AAAA;;;;AAKA;;;AAGA;AACI,QAAI,MAAM,EAAE,GAAG,GAAL,EAAV;;AAED,QAAI,IAAG,OAAO,wBAAP,CAAgC,GAAhC,EAAqC,GAArC,CAAP;AACC,YAAQ,IAAR,CAAa,CAAb;AACA;AACA;AACA;AACA;AACA;AAEH;AACD;;;;;AAKA,CAqBC;AApBD;;;;;;;;;;;;;;;;;;;;AAqBA;;;AAGA;AAAA,QACa,yBADb,GACI,SAAS,yBAAT,CAAmC,GAAnC,EAAwC;AACpC,YAAM,SAAS,EAAf;AADoC;AAAA;AAAA;;AAAA;AAEpC,iCAAgB,QAAQ,OAAR,CAAgB,GAAhB,CAAhB,8HAAsC;AAAA,oBAA7B,GAA6B;;AAClC,uBAAO,GAAP,IAAc,OAAO,wBAAP,CAAgC,GAAhC,EAAqC,GAArC,CAAd;AACH;AAJmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKpC,eAAO,MAAP;AACH,KAPL;AAQC","file":"Object.getOwnPropertyDescriptors().011-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/14.\n */\n\n\n/**\n *ES5有一个Object.getOwnPropertyDescriptor方法，返回某个对象属性的描述对象（descriptor）。\n */\n{\n    var obj = { p: 'a' };\n\n   let r= Object.getOwnPropertyDescriptor(obj, 'p')\n    console.info(r);\n    // Object { value: \"a\",\n    //   writable: true,\n    //   enumerable: true,\n    //   configurable: true\n    // }\n\n}\n/**\n *ES7有一个提案，提出了Object.getOwnPropertyDescriptors方法，返回指定对象所有自身属性（非继承属性）的描述对象。\n * Object.getOwnPropertyDescriptors方法返回一个对象，所有原对象的属性名都是该对象的属性名，对应的属性值就是该属性的描述对象。\n\n */\n{\n/*\n\n    const obj = {\n        foo: 123,\n        get bar() { return 'abc' }\n    };\n\n    Object.getOwnPropertyDescriptors(obj)\n    // { foo:\n    //    { value: 123,\n    //      writable: true,\n    //      enumerable: true,\n    //      configurable: true },\n    //   bar:\n    //    { get: [Function: bar],\n    //      set: undefined,\n    //      enumerable: true,\n    //      configurable: true } }\n*/\n\n}\n/**\n *该方法的实现非常容易。\n */\n{\n    function getOwnPropertyDescriptors(obj) {\n        const result = {};\n        for (let key of Reflect.ownKeys(obj)) {\n            result[key] = Object.getOwnPropertyDescriptor(obj, key);\n        }\n        return result;\n    }\n}\n"]}