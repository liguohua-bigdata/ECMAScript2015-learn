{"version":3,"sources":["属性的简洁表示法.001.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;AAGA;AACI;AACI,YAAI,MAAM,KAAV;AACA;AACA,YAAI,MAAM,EAAC,QAAD,EAAV;AACA,gBAAQ,IAAR,CAAa,GAAb,EAJJ,CAIuB;AACtB;AACD;AACA;AACI,YAAI,MAAM,KAAV;AACA,YAAI,MAAM,EAAC,KAAK,GAAN,EAAV;AACA,gBAAQ,IAAR,CAAa,GAAb,EAHJ,CAGuB;AACtB;AACJ;AACD;;;AAGA;AAAA,QACa,CADb,GACI,SAAS,CAAT,CAAW,CAAX,EAAc,CAAd,EAAiB;AACb,eAAO,EAAC,IAAD,EAAI,IAAJ,EAAP;AACH,KAHL;;AAKI;;;AALJ,QAMa,CANb,GAMI,SAAS,CAAT,CAAW,CAAX,EAAc,CAAd,EAAiB;AACb,eAAO,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAP;AACH,KARL;;AAUI,YAAQ,IAAR,CAAa,EAAE,CAAF,EAAK,CAAL,CAAb,EAVJ,CAUyB;AACxB;AACD;;;AAGA;AACI,QAAI,IAAI;AACJ,cADI,oBACK;AACL,mBAAO,QAAP;AACH;AAHG,KAAR;AAKA;AACA,QAAI,IAAI;AACJ,gBAAQ,kBAAY;AAChB,mBAAO,QAAP;AACH;AAHG,KAAR;AAKH;AACD;;;AAGA;AAAA,QACa,QADb,GACI,SAAS,QAAT,GAAoB;AAChB,YAAI,IAAI,CAAR;AACA,YAAI,IAAI,EAAR;AACA,eAAO,EAAC,IAAD,EAAI,IAAJ,EAAP;AACH,KALL;;AAMI,YAAQ,IAAR,CAAa,UAAb;AACH;AACD;;;AAGA;AAAA,QAGa,OAHb,GAGI,SAAS,OAAT,CAAkB,GAAlB,EAAuB;AACnB,eAAO,OAAO,EAAP,GAAY,GAAG,GAAH,CAAZ,GAAsB,IAA7B;AACH,KALL;;AAAA,QAOa,OAPb,GAOI,SAAS,OAAT,CAAkB,GAAlB,EAAuB,KAAvB,EAA8B;AAC1B,WAAG,GAAH,IAAU,KAAV;AACH,KATL;;AAAA,QAWa,KAXb,GAWI,SAAS,KAAT,GAAkB;AACd,aAAK,EAAL;AACH,KAbL;;AACI,QAAI,KAAK,EAAT;;AAcA,WAAO,OAAP,GAAiB,EAAE,gBAAF,EAAW,gBAAX,EAAoB,YAApB,EAAjB;AACA;AACA,WAAO,OAAP,GAAiB;AACb,iBAAS,OADI;AAEb,iBAAS,OAFI;AAGb,eAAO;AAHM,KAAjB;AAKH;AACD;;;AAGA;AACI,QAAI,MAAM;AACJ,SADI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAEI,aAFJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAV;AAKH","file":"属性的简洁表示法.001-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/13.\n */\n\n/**\n *ES6允许直接写入变量和函数，作为对象的属性和方法。\n */\n{\n    {\n        var foo = 'bar';\n        //ES6允许在对象之中，只写属性名，不写属性值。这时，属性值等于属性名所代表的变量\n        var baz = {foo};\n        console.info(baz); // {foo: \"bar\"}\n    }\n    // 等同于\n    {\n        var foo = 'bar';\n        var baz = {foo: foo};\n        console.info(baz); // {foo: \"bar\"}\n    }\n}\n/**\n *ES6允许在对象之中，只写属性名，不写属性值。这时，属性值等于属性名所代表的变量\n */\n{\n    function f(x, y) {\n        return {x, y};\n    }\n\n    // 等同于\n    function f(x, y) {\n        return {x: x, y: y};\n    }\n\n    console.info(f(1, 2))// Object {x: 1, y: 2}\n}\n/**\n *方法也可以简写\n */\n{\n    var o = {\n        method() {\n            return \"Hello!\";\n        }\n    };\n    // 等同于\n    var o = {\n        method: function () {\n            return \"Hello!\";\n        }\n    };\n}\n/**\n *这种写法用于函数的返回值，将会非常方便\n */\n{\n    function getPoint() {\n        var x = 1;\n        var y = 10;\n        return {x, y};\n    }\n    console.info(getPoint());\n}\n/**\n *CommonJS模块输出变量，就非常合适使用简洁写法。\n */\n{\n    var ms = {};\n\n    function getItem (key) {\n        return key in ms ? ms[key] : null;\n    }\n\n    function setItem (key, value) {\n        ms[key] = value;\n    }\n\n    function clear () {\n        ms = {};\n    }\n\n    module.exports = { getItem, setItem, clear };\n    // 等同于\n    module.exports = {\n        getItem: getItem,\n        setItem: setItem,\n        clear: clear\n    };\n}\n/**\n *如果某个方法的值是一个Generator函数，前面需要加上星号。\n */\n{\n    var obj = {\n        * m(){\n            yield 'hello world';\n        }\n    };\n}\n"]}