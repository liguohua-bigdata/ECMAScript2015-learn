{"version":3,"sources":["console.info(r).004.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;;;;AAMA;AACI,KAAC,CAAD,KAAO,CAAC,CAAR,CADJ,CACc;AACV,YAAQ,GAAR,CAFJ,CAEgB;AACf;AACD;;;;AAIA;AACI,WAAO,EAAP,CAAU,CAAC,CAAX,EAAc,CAAC,CAAf,EADJ,CACsB;AAClB,WAAO,EAAP,CAAU,GAAV,EAAe,GAAf,EAFJ,CAEwB;AACvB;AACD;;;AAGA;AACI,WAAO,cAAP,CAAsB,MAAtB,EAA8B,IAA9B,EAAoC;AAChC,eAAO,eAAS,CAAT,EAAY,CAAZ,EAAe;AAClB,gBAAI,MAAM,CAAV,EAAa;AACT;AACA,uBAAO,MAAM,CAAN,IAAW,IAAI,CAAJ,KAAU,IAAI,CAAhC;AACH;AACD;AACA,mBAAO,MAAM,CAAN,IAAW,MAAM,CAAxB;AACH,SAR+B;AAShC,sBAAc,IATkB;AAUhC,oBAAY,KAVoB;AAWhC,kBAAU;AAXsB,KAApC;AAaH","file":"console.info(r).004-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/14.\n */\n/**\n *ES5比较两个值是否相等，只有两个运算符：\n * 相等运算符（==）,自动转换数据类型\n * 严格相等运算符（===）:后者的NaN不等于自身，以及+0等于-0。\n * JavaScript缺乏一种运算，在所有环境中，只要两个值是一样的，它们就应该相等。\n */\n{\n    +0 === -0 //true\n    NaN === NaN // false\n}\n/**\n *ES6提出“Same-value equality”（同值相等）算法，用来解决这个问题。Object.is就是部署这个算法的新方法。它用来比较两个值是否严格相等，与严格比较运算符（===）的行为基本一致。\n * 一是+0不等于-0，二是NaN等于自身。\n */\n{\n    Object.is(+0, -0) // false\n    Object.is(NaN, NaN) // true\n}\n/**\n *ES5可以通过下面的代码，部署Object.is。\n */\n{\n    Object.defineProperty(Object, 'is', {\n        value: function(x, y) {\n            if (x === y) {\n                // 针对+0 不等于 -0的情况\n                return x !== 0 || 1 / x === 1 / y;\n            }\n            // 针对NaN的情况\n            return x !== x && y !== y;\n        },\n        configurable: true,\n        enumerable: false,\n        writable: true\n    });\n}\n"]}