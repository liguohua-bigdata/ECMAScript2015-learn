{"version":3,"sources":["安全整数和Number.isSafeInteger().006.js"],"names":[],"mappings":"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","file":"安全整数和Number.isSafeInteger().006-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/11.\n */\n\n/**\n *JavaScript能够准确表示的整数范围在-2^53到2^53之间（不含两个端点），超过这个范围，无法精确表示这个值。\n */\nconsole.log(\"**************001\");\n{\n\n    console.info(9007199254740992);//9007199254740992\n\n    //不准确\n    console.info(9007199254740993);//9007199254740992\n\n    let r0 = Math.pow(2, 53);\n    console.info(r0);// 9007199254740992\n\n    //不准确\n    let r1 = Math.pow(2, 53) + 1;\n    console.info(r1);// 9007199254740992\n\n    console.info(r0 === r1);//true\n\n\n}\n/**\n *ES6引入了Number.MAX_SAFE_INTEGER和Number.MIN_SAFE_INTEGER这两个常量，用来表示这个范围的上下限。\n */\nconsole.log(\"**************002\");\n{\n    console.info(Number.MAX_SAFE_INTEGER);//9007199254740991\n\n    let r = Math.pow(2, 53) - 1;\n    console.info(r);//9007199254740991\n\n    r = Number.MAX_SAFE_INTEGER === r\n    console.info(r);//true\n\n\n    console.info(Number.MIN_SAFE_INTEGER);//-9007199254740991\n    r = Number.MIN_SAFE_INTEGER === -Number.MAX_SAFE_INTEGER\n    console.info(r);//true\n\n}\n/**\n *Number.isSafeInteger()则是用来判断一个整数是否落在这个范围之内\n */\n{\n    Number.isSafeInteger('a') // false\n    Number.isSafeInteger(null) // false\n    Number.isSafeInteger(NaN) // false\n    Number.isSafeInteger(Infinity) // false\n    Number.isSafeInteger(-Infinity) // false\n\n    Number.isSafeInteger(3) // true\n    Number.isSafeInteger(1.2) // false\n    Number.isSafeInteger(9007199254740990) // true\n    Number.isSafeInteger(9007199254740992) // false\n\n    Number.isSafeInteger(Number.MIN_SAFE_INTEGER - 1) // false\n    Number.isSafeInteger(Number.MIN_SAFE_INTEGER) // true\n    Number.isSafeInteger(Number.MAX_SAFE_INTEGER) // true\n    Number.isSafeInteger(Number.MAX_SAFE_INTEGER + 1) // false\n}\n/**\n *这个函数的实现很简单，就是跟安全整数的两个边界值比较一下。\n */\n{\n    Number.isSafeInteger = function (n) {\n        return (typeof n === 'number' &&\n        Math.round(n) === n &&\n        Number.MIN_SAFE_INTEGER <= n &&\n        n <= Number.MAX_SAFE_INTEGER);\n    }\n}\n\n/**\n * 需要注意。验证运算结果是否落在安全整数的范围内，不要只验证运算结果，而要同时验证参与运算的每个值。\n */\n\n{\n    Number.isSafeInteger(9007199254740993)\n    // false\n    Number.isSafeInteger(990)\n    // true\n    Number.isSafeInteger(9007199254740993 - 990)\n    // true\n    9007199254740993 - 990\n    // 返回结果 9007199254740002\n    // 正确答案应该是 9007199254740003\n}\n\n/**\n * 下面的函数可以同时验证两个运算数和运算结果。\n */\n\n{\n    function trusty (left, right, result) {\n        if (\n            Number.isSafeInteger(left) &&\n            Number.isSafeInteger(right) &&\n            Number.isSafeInteger(result)\n        ) {\n            return result;\n        }\n        throw new RangeError('Operation cannot be trusted!');\n    }\n    trusty(9007199254740993, 990, 9007199254740993 - 990)\n    // RangeError: Operation cannot be trusted!\n\n    trusty(1, 2, 3)\n    // 3\n}"]}