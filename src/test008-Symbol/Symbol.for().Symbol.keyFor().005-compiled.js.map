{"version":3,"sources":["Symbol.for().Symbol.keyFor().005.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;;AAIA;AACI,MAAI,KAAK,OAAO,GAAP,CAAW,KAAX,CAAT;AACA,MAAI,KAAK,OAAO,GAAP,CAAW,KAAX,CAAT;AACA,MAAI,IAAI,OAAO,EAAf;AACA,UAAQ,IAAR,CAAa,CAAb,EAJJ,CAIoB;AACnB;AACD;;;AAGA;AACI,MAAI,KAAI,OAAO,GAAP,CAAW,KAAX,MAAsB,OAAO,GAAP,CAAW,KAAX,CAA9B;AACA,UAAQ,IAAR,CAAa,EAAb,EAFJ,CAEoB;;AAEhB,OAAI,OAAO,KAAP,MAAkB,OAAO,KAAP,CAAtB;AACA,UAAQ,IAAR,CAAa,EAAb,EALJ,CAKoB;AACnB;AACD;;;AAGA;AACI,MAAI,KAAK,OAAO,GAAP,CAAW,KAAX,CAAT;AACA,MAAI,MAAI,OAAO,MAAP,CAAc,EAAd,CAAR;AACA,UAAQ,IAAR,CAAa,GAAb,EAHJ,CAGmB;;AAEf,MAAI,KAAK,OAAO,KAAP,CAAT;AACA,QAAI,OAAO,MAAP,CAAc,EAAd,CAAJ;AACA,UAAQ,IAAR,CAAa,GAAb,EAPJ,CAOmB;AAClB;AACD;;;AAGA;AACA;;;;;;;AAOC","file":"Symbol.for().Symbol.keyFor().005-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/14.\n */\n/**\n *Symbol.for方法可以做到这一点。它接受一个字符串作为参数，然后搜索有没有以该参数作为名称的Symbol值。\n * 如果有，就返回这个Symbol值，否则就新建并返回一个以该字符串为名称的Symbol值。\n */\n{\n    var s1 = Symbol.for('foo');\n    var s2 = Symbol.for('foo');\n    let r = s1 === s2;\n    console.info(r);// true\n}\n/**\n * 如果你调用Symbol.for(\"cat\")30次，每次都会返回同一个Symbol值，但是调用Symbol(\"cat\")30次，会返回30个不同的Symbol值。\n */\n{\n    let r = Symbol.for(\"bar\") === Symbol.for(\"bar\")\n    console.info(r);// true\n\n    r = Symbol(\"bar\") === Symbol(\"bar\")\n    console.info(r);// false\n}\n/**\n *Symbol.keyFor方法返回一个已登记的Symbol类型值的key。\n */\n{\n    var s1 = Symbol.for(\"foo\");\n    let r = Symbol.keyFor(s1);\n    console.info(r)// \"foo\"\n\n    var s2 = Symbol(\"foo\");\n    r = Symbol.keyFor(s2)\n    console.info(r)// undefined\n}\n/**\n *Symbol.for为Symbol值登记的名字，是全局环境的，可以在不同的iframe或service worker中取到同一个值。\n */\n{\n/*\n    iframe = document.createElement('iframe');\n    iframe.src = String(window.location);\n    document.body.appendChild(iframe);\n    iframe.contentWindow.Symbol.for('foo') === Symbol.for('foo')\n    // true\n    上面代码中，iframe窗口生成的Symbol值，可以在主页面得到。*/\n}\n"]}