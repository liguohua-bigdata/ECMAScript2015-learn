{"version":3,"sources":["at.005.js"],"names":[],"mappings":";;AAAA;;;AAGA;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AACI,QAAI,KAAK,MAAM,MAAN,CAAa,CAAb,CAAT,CADJ,CAC6B;AACzB,YAAQ,IAAR,CAAa,EAAb;;AAEA;AACA,QAAI,KAAK,KAAK,MAAL,CAAY,CAAZ,CAAT,CALJ,CAK4B;AACxB,YAAQ,IAAR,CAAa,EAAb;AAEH;AACD;;;;AAIA,CAOC;AANG;AACA;AACA;AACA;AACA;;AAGJ;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AACI,QAAM,OAAO,SAAP,IAAO;AAAA,2CAET,MAAM,GAAN,CAAU;AAAA,0CACA,KAAK,KADL,oCAEA,KAAK,IAFL;AAAA,SAAV,EAGC,IAHD,CAGM,EAHN,CAFS;AAAA,KAAb;AAQA,QAAM,OAAO,CACT,EAAC,OAAO,QAAR,EAAkB,MAAM,MAAxB,EADS,EAET,EAAC,OAAO,MAAR,EAAgB,MAAM,SAAtB,EAFS,CAAb;;AAKA,YAAQ,IAAR,CAAa,KAAK,IAAL,CAAb;AACH;AACD;;;;AAIA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AACI;AACA,QAAI,MAAM,YAAY,kBAAtB;AACA,QAAI,OAAO,IAAI,QAAJ,CAAa,MAAb,EAAqB,GAArB,CAAX;AACA,YAAQ,IAAR,CAAa,KAAK,MAAL,CAAb,EAJJ,CAIgC;;AAE5B;AACA,QAAI,OAAO,4BAAX;AACA,QAAI,QAAQ,KAAK,IAAL,CAAU,IAAV,EAAgB,IAAhB,CAAZ;AACA,YAAQ,IAAR,CAAa,MAAM,MAAN,CAAb,EATJ,CASiC;AAChC","file":"at.005-compiled.js","sourcesContent":["/**\n * Created by liguohua on 16/10/10.\n */\n/**\n *ES5对字符串对象提供charAt方法，返回字符串给定位置的字符。该方法不能识别码点大于0xFFFF的字符。\n */\nconsole.log(\"**************001\");\n{\n    let r1 = 'abc'.charAt(0) // \"a\"\n    console.info(r1);\n\n    //charAt方法返回的是UTF-16编码的第一个字节，实际上是无法显示的。\n    let r2 = '𠮷'.charAt(0) // \"\\uD842\"\n    console.info(r2);\n\n}\n/**\n *有一个提案，提出字符串实例的at方法，可以识别Unicode编号大于0xFFFF的字符，返回正确的字符。\n * 现在还没有实现\n */\n{\n    // let r1='abc'.at(0) // \"a\"\n    // console.info(r1);\n    //\n    // let r2='𠮷'.at(0) // \"𠮷\"\n    // console.info(r2);\n\n}\n/**\n *模板字符串甚至还能嵌套。\n */\nconsole.log(\"**************002\");\n{\n    const tmpl = addrs => `\n      <table>\n      ${addrs.map(addr => `\n        <tr><td>${addr.first}</td></tr>\n        <tr><td>${addr.last}</td></tr>\n      `).join('')}\n      </table>\n    `;\n    const data = [\n        {first: '<Jane>', last: 'Bond'},\n        {first: 'Lars', last: '<Croft>'},\n    ];\n\n    console.info(tmpl(data));\n}\n/**\n * 一般用不到!!\n *如果需要引用模板字符串本身，在需要时执行，可以像下面这样写。\n */\nconsole.log(\"**************003\");\n{\n    // 写法一\n    let str = 'return ' + '`Hello ${name}!`';\n    let func = new Function('name', str);\n    console.info(func('Jack')); // \"Hello Jack!\"\n\n    // 写法二\n    let str0 = '(name) => `Hello ${name}!`';\n    let func0 = eval.call(null, str0);\n    console.info(func0('Jack')); // \"Hello Jack!\"\n}\n"]}