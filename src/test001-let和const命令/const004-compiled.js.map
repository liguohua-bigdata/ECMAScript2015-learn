{"version":3,"sources":["const004.js"],"names":[],"mappings":";;;;AAAA;;;AAGA;;;;AAIA,IAAM,IAAI,EAAV;AACA,EAAE,IAAF,CAAO,OAAP,E,CAAiB;AACjB,EAAE,MAAF,GAAW,CAAX,C,CAAiB;AACjB;;AAEA;;;AAGA,IAAM,MAAM,OAAO,MAAP,CAAc,EAAd,CAAZ;AACA;AACA;AACA,IAAI,IAAJ,GAAW,GAAX;;AAGA;;;;AAIA,IAAI,cAAc,SAAd,WAAc,CAAC,GAAD,EAAS;AACvB,SAAO,MAAP,CAAc,GAAd;AACA,SAAO,IAAP,CAAY,GAAZ,EAAiB,OAAjB,CAA0B,UAAC,GAAD,EAAM,KAAN,EAAgB;AACtC,QAAK,QAAO,IAAI,GAAJ,CAAP,MAAoB,QAAzB,EAAoC;AAChC,kBAAa,IAAI,GAAJ,CAAb;AACH;AACJ,GAJD;AAKH,CAPD","file":"const004-compiled.js","sourcesContent":["/**\n * Created by liguohua on 16/10/10.\n */\n/**\n * 保证变量名指向的地址不变，并不保证该地址的数据不变\n */\n\nconst a = [];\na.push('Hello'); // 可执行\na.length = 0;    // 可执行\n// a = ['Dave'];    // 报错\n\n/**\n * 如果真的想将对象冻结，应该使用Object.freeze方法。\n */\nconst foo = Object.freeze({});\n// 常规模式时，下面一行不起作用；\n// 严格模式时，该行会报错\nfoo.prop = 123;\n\n\n/**\n * 除了将对象本身冻结，对象的属性也应该冻结。下面是一个将对象彻底冻结的函数。\n */\n\nvar constantize = (obj) => {\n    Object.freeze(obj);\n    Object.keys(obj).forEach( (key, value) => {\n        if ( typeof obj[key] === 'object' ) {\n            constantize( obj[key] );\n        }\n    });\n};"]}