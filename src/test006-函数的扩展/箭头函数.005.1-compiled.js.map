{"version":3,"sources":["箭头函数.005.1.js"],"names":[],"mappings":"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","file":"箭头函数.005.1-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/12.\n */\n\n/**\n *ES6允许使用“箭头”（=>）定义函数。\n */\nconsole.log(\"**************001\");\n{\n    var f = v => v;\n    console.info(f(20));\n}\n/**\n *上面的箭头函数等同于：\n */\nconsole.log(\"**************002\");\n{\n    var f = function (v) {\n        return v;\n    };\n    console.info(f(20));\n}\n/**\n *如果箭头函数不需要参数或需要多个参数，就使用一个圆括号代表参数部分\n */\n{\n    var f = () => 5;\n    // 等同于\n    var f = function () {\n        return 5\n    };\n\n    var sum = (num1, num2) => num1 + num2;\n    // 等同于\n    var sum = function (num1, num2) {\n        return num1 + num2;\n    };\n}\n/**\n *如果箭头函数的代码块部分多于一条语句，就要使用大括号将它们括起来，并且使用return语句返回。\n */\nconsole.log(\"**************003\");\n{\n    var sum = (num1, num2) => {\n        return num1 + num2;\n    };\n    console.info(sum(12, 12));\n\n}\n\n/**\n *于大括号被解释为代码块，所以如果箭头函数直接返回一个对象，必须在对象外面加上括号。\n */\nconsole.log(\"**************004\");\n{\n    var getTempItem = id => ({id: id, name: \"Temp\"});\n    console.info(getTempItem(12));\n}\n/**\n *箭头函数可以与变量解构结合使用。\n */\nconsole.log(\"**************005\");\n{\n    {\n        const full = ({first, last}) => first + ' ' + last;\n        console.info('li', 'si');\n    }\n    // 等同于\n    {\n        function full(person) {\n            return person.first + ' ' + person.last;\n        }\n\n        console.info({first: 'li', last: 'si'});\n    }\n}\n/**\n *箭头函数使得表达更加简洁。\n */\nconsole.log(\"**************006\");\n{\n    const isEven = n => n % 2 == 0;\n    const square = n => n * n;\n}\n/**\n *箭头函数的一个用处是简化回调函数。\n */\nconsole.log(\"**************007\");\n{\n    {\n        // 正常函数写法\n        [1, 2, 3].map(function (x) {\n            return x * x;\n        });\n    }\n    {\n        // 箭头函数写法\n        [1, 2, 3].map(x => x * x);\n    }\n}\n{\n    {\n        let values = [2, 2, 13, 1, 45];\n        // 正常函数写法\n        var result = values.sort(function (a, b) {\n            return a - b;\n        });\n        console.info(result);\n    }\n    {\n        let values = [2, 2, 13, 1, 45];\n        // 箭头函数写法\n        var result = values.sort((a, b) => a - b);\n        console.info(result);\n\n    }\n}\n/**\n *rest参数与箭头函数结合的例子\n */\nconsole.log(\"**************008\");\n{\n    const numbers = (...nums) => nums;\n    let r = numbers(1, 2, 3, 4, 5);\n    console.info(r);// [1,2,3,4,5]\n}\n{\n    const headAndTail = (head, ...tail) => [head, tail];\n\n    let r = headAndTail(1, 2, 3, 4, 5)\n    console.info(r);// [1,[2,3,4,5]]\n}"]}