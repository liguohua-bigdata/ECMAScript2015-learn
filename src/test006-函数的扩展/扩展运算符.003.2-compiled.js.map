{"version":3,"sources":["扩展运算符.003.2.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;;;AAKA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AACI,MAAI,OAAO,CAAC,GAAD,EAAM,GAAN,CAAX;AACA,MAAI,OAAO,CAAC,GAAD,CAAX;AACA,MAAI,OAAO,CAAC,GAAD,EAAM,GAAN,CAAX;AACA;AACA,MAAI,IAAI,KAAK,MAAL,CAAY,IAAZ,EAAkB,IAAlB,CAAR;AACA,UAAQ,IAAR,CAAa,CAAb,EANJ,CAMoB;AAChB;AACA,gBAAQ,IAAR,EAAiB,IAAjB,EAA0B,IAA1B;AACA,UAAQ,IAAR,CAAa,CAAb,EATJ,CASoB;AACnB;AACD;;;;;AAKA;AACI;AAAA,QACW,KADX,GAC8B,CAD9B;AAAA,QACqB,IADrB,IACiC,CADjC,EACoC,CADpC,EACuC,CADvC,EAC0C,CAD1C;;AAEI,UAFJ,CAEU;AACN,SAHJ,CAGU;AACT;AACD;AAAA,eAC6B,EAD7B;AAAA,QACW,MADX;;AAAA,QACqB,KADrB;;AAEI,WAFJ,CAEU;AACN,UAHJ,CAGU;AACT;AACD;AAAA,gBAC6B,CAAC,KAAD,CAD7B;AAAA,QACW,OADX;;AAAA,QACqB,MADrB;;AAEI,YAFJ,CAEW;AACP,WAHJ,CAGW;AACV;AACJ;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;;AAED;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA,CAEC","file":"扩展运算符.003.2-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/12.\n */\n\n/**\n *扩展运算符的应用\n * （1）合并数组\n 扩展运算符提供了数组合并的新写法。\n */\nconsole.log(\"**************001\");\n{\n    var arr1 = ['a', 'b'];\n    var arr2 = ['c'];\n    var arr3 = ['d', 'e'];\n    // ES5的合并数组\n    let r = arr1.concat(arr2, arr3);\n    console.info(r);// [ 'a', 'b', 'c', 'd', 'e' ]\n    // ES6的合并数组\n    r = [...arr1, ...arr2, ...arr3];\n    console.info(r);// [ 'a', 'b', 'c', 'd', 'e' ]\n}\n/**\n *（2）与解构赋值结合\n\n 扩展运算符可以与解构赋值结合起来，用于生成数组。\n */\n{\n    {\n        const [first, ...rest] = [1, 2, 3, 4, 5];\n        first // 1\n        rest  // [2, 3, 4, 5]\n    }\n    {\n        const [first, ...rest] = [];\n        first // undefined\n        rest  // []:\n    }\n    {\n        const [first, ...rest] = [\"foo\"];\n        first  // \"foo\"\n        rest   // []\n    }\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n\n}\n"]}