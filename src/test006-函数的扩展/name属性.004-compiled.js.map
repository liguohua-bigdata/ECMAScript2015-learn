{"version":3,"sources":["name属性.004.js"],"names":[],"mappings":";;AAAA;;;;AAIA;;;AAGA;AAAA,MACa,GADb,GACI,SAAS,GAAT,GAAe,CACd,CAFL;;AAII,MAAI,IAAJ,CAJJ,CAIa;AACZ;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AACI,MAAI,QAAQ,SAAR,KAAQ,GAAY,CACvB,CADD;AAEA;AACA,UAAQ,IAAR,CAAa,MAAM,IAAnB,EAJJ,CAI4B;AACxB;AACA,UAAQ,IAAR,CAAa,MAAM,IAAnB,EANJ,CAM4B;AAC3B;AACD;;;AAGA;AACI,MAAM,MAAM,SAAS,GAAT,GAAe,CAC1B,CADD;AAEA;AACA,MAAI,IAAJ,CAJJ,CAIa;AACT;AACA,MAAI,IAAJ,CANJ,CAMa;AACZ;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AACI,MAAI,IAAK,IAAI,QAAJ,EAAD,CAAe,IAAvB;AACA,UAAQ,IAAR,CAAa,CAAb,EAFJ,CAEoB;AACnB;AACD;;;AAGA,QAAQ,GAAR,CAAY,mBAAZ;AACA;AAAA,MACa,IADb,GACI,SAAS,IAAT,GAAe,CAAE,CADrB;;AACqB;AACjB,MAAI,KAAE,KAAI,IAAJ,CAAS,EAAT,EAAa,IAAnB;AACA,UAAQ,IAAR,CAAa,EAAb,EAHJ,CAGoB;;AAEhB,OAAG,YAAU,CAAE,CAAb,CAAe,IAAf,CAAoB,EAApB,EAAwB,IAA1B;AACA,UAAQ,IAAR,CAAa,EAAb,EANJ,CAMoB;AACnB","file":"name属性.004-compiled.js","sourcesContent":["/**\n * Created by liguohua on 2016/10/12.\n */\n\n/**\n *函数的name属性，返回该函数的函数名。\n */\n{\n    function foo() {\n    }\n\n    foo.name // \"foo\"\n}\n/**\n *\n */\nconsole.log(\"**************001\");\n{\n    var func1 = function () {\n    };\n    // ES5\n    console.info(func1.name)// \"\"\n    // ES6\n    console.info(func1.name)// \"func1\"\n}\n/**\n *如果将一个具名函数赋值给一个变量，则ES5和ES6的name属性都返回这个具名函数原本的名字。\n */\n{\n    const bar = function baz() {\n    };\n    // ES5\n    bar.name // \"baz\"\n    // ES6\n    bar.name // \"baz\"\n}\n/**\n *Function构造函数返回的函数实例，name属性的值为“anonymous”。\n */\nconsole.log(\"**************002\");\n{\n    let r = (new Function).name;\n    console.info(r);// \"anonymous\"\n}\n/**\n *bind返回的函数，name属性值会加上“bound ”前缀。\n */\nconsole.log(\"**************002\");\n{\n    function foo() {};\n    let r=foo.bind({}).name;\n    console.info(r);// \"bound foo\"\n\n    r=(function(){}).bind({}).name;\n    console.info(r);// \"bound \"\n}\n"]}